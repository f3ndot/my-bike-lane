/ = link_to t('.new', :default => t("helpers.links.new")), new_violation_path, :class => 'btn btn-primary'

.row
  .offset1.span11
    %ul.nav.nav-tabs
      - if params[:type] == 'new' or params[:type].nil?
        %li.active= link_to "Most Recent", root_url
      - else
        %li= link_to "Most Recent", root_url
      %li{class: active_class(:type, 'top')}= link_to "Worst Offenders", sorted_violations_url('top')

    - if params[:type] == 'top'
      .alert
        %i.icon-warning-sign
        %strong There be bugs here!
        Unfortunately the paging system is broken on this page.

.violations
  - @violations.each do |violation|
    .row.violation-row
      .span1
        .author
          - if violation.user.nil?
            %a{:href => "#", :rel => "bottom-tooltip", :title => "Anonymous"}= image_tag(avatar_url(violation.user, 63), :class => "anonymous-avatar", :alt => "", :title => "")
          - else
            = link_to image_tag(avatar_url(violation.user, 65), :alt => "", :title => ""), user_path(violation.user), :rel => "bottom-tooltip", :title => violation.user.display_name(false)
        .voting
          - if current_user.present? and current_user.voted_for? violation
            %a.arrow-n.voted{href: un_vote_violation_path(violation), rel: 'right-tooltip', title: 'Undo your vote', data: {unvote: un_vote_violation_path(violation)}}
          - else
            %a.arrow-n{href: up_vote_violation_path(violation), rel: 'right-tooltip'}
          .vote-tally= violation.plusminus
          - if current_user.present? and current_user.voted_against? violation
            %a.arrow-s.voted{href: un_vote_violation_path(violation), title: "Undo your vote", rel: 'right-tooltip', data: {unvote: un_vote_violation_path(violation)}}
          - else
            %a.arrow-s{href: down_vote_violation_path(violation), title: "This post is of bad quality or the vehicle was in the right", rel: 'right-tooltip'}
      .span11
        .violation-item.clearfix
          %strong.title= link_to violation.title, violation_path(violation)
          - if violation.violator.present?
            %span.muted= violation.violator.license
            %span.muted= "of #{violation.violator.organization.name}" if violation.violator.organization.present?
          .actions.pull-right
            - if can? :update, violation
              = link_to "<i class='icon-pencil'></i> Edit".html_safe, edit_violation_path(violation), :class => 'btn btn-mini'
              - if can? :destroy, violation
                %strong= link_to "<i class='icon-remove'></i>".html_safe, violation_path(violation), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-mini btn-danger'
            - else
              - if violation.flagged == true
                .btn.btn-mini.disabled{:title => 'Flagged for review'}
                  %i.icon-flag
                  Flagged
              - else
                - if can? :flag, violation
                  = link_to "<i class='icon-flag'></i>".html_safe, flag_violation_path(violation), :title => 'Flag for review', :class => 'btn btn-mini'
          .pull-right.muted.date
            posted
            %a{:href => "#", :rel => "tooltip", :title => "#{l(violation.created_at)}"}= time_ago_in_words violation.created_at
            ago
        .violation-pictures
          - if violation.photos.count > 0
            .display= link_to image_tag(violation.photos.first.image, :class => "img-polaroid"), violation_path(violation)
            .pictures
              - violation.photos.each_with_index do |photo,index|
                - if index > 0
                  = link_to image_tag(photo.image, :width => 161), violation_path(violation)

- if params[:type] != 'top'
  .violation-pagination
    %p.muted= page_entries_info @violations
    = will_paginate @violations, :renderer => BootstrapPagination::Rails